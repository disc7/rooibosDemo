namespace tests
	@suite
	class MockExample extends tests.BaseTestSuite

		protected override function setUp()
			super.setUp()
		end function

		protected override function beforeEach()
			m.SUT = SomeModel()
		end function

		protected override function afterEach()
			m.SUT = invalid
			TearDownSomeModel()
		end function

		'+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		@describe("Example Tests on SomeModel public methods")
		'+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

		@it("globalMockExample1_passing")
		function _()
			m.stubCall(getManifestValue, function(key) : return "stubCall hardcoded title" : end function)
			m.SUT.globalMockExample()
			m.assertEqual(m.SUT.appTitle, "stubCall hardcoded title")
		end function

		@it("globalMockExample2_crashing_due_to_returnValue")
		@params("stubCall dynamic title")
		function _(manifestValue as string)
			m.stubCall(getManifestValue, manifestValue)
			m.SUT.globalMockExample()
			m.assertEqual(m.SUT.appTitle, manifestValue)
		end function

	end class
end namespace
